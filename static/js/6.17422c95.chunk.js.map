{"version":3,"sources":["store/Actions/errorHandlerActions.js","axios/axios.js","store/Actions/repositoryActions.js","components/Modals/SuccessModal/SuccessModal.js","components/Modals/ErrorModal/ErrorModal.js","UI/Inputs/Input.js","Utility/InputConfiguration.js","Utility/FormUtility.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/Owner/CreateOwner/CreateOwner.js"],"names":["handleHTTPError","error","props","response","status","type","actionTypes","execute404Handler","execute500Handler","executeOtherErrorHandler","closeErrorModal","instance","axios","create","baseURL","headers","headerType","getData","url","dispatch","get","then","data","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal","SuccessModal","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","ErrorModal","closeModal","Input","inputField","errorMessage","invalid","shouldValidate","touched","elementType","controlId","id","componentClass","ControlLabel","sm","label","value","onChange","changed","onBlur","blur","selected","dateFormat","readOnly","className","showYearDropdown","dropdownMode","returnInputConfiguration","name","element","validation","required","valid","address","maxLength","dateOfBirth","moment","convertStateToArrayOfFormOnjects","formObject","formElementsArray","key","push","config","executeValidationAndReturnFormElement","event","updatedOwnerForm","formElement","target","validationResponse","validationObject","isValid","trim","length","checkValidity","countInvalidElements","ownerForm","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","CreateOwner","useState","setOwnerForm","isFormValid","setIsFormValid","useDispatch","showSuccessModal","useSelector","state","repository","showErrorModal","errorHandler","useEffect","formUtilityActions","handleChangeEvent","counter","horizontal","onSubmit","e","preventDefault","ownerToCreate","repositoryActions","map","mdOffset","md","disabled","history"],"mappings":"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","file":"static/js/6.17422c95.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = props => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = props => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherErrorHandler = error => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n    else {\r\n        return executeOtherErrorHandler(error);\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://pacific-meadow-89341.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = data => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            dispatch(getDataSuccess(response.data));\r\n        })\r\n        .catch (error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n        .then(response => {\r\n            dispatch(postDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n        .then(response => {\r\n            dispatch(putDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n        .then(response => {\r\n            dispatch(deleteDataSuccess(response));\r\n        })\r\n        .catch(error => {\r\n            dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeSuccessModal = (props, url) => {\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst SuccessModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React, { Fragment } from 'react';\r\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n    let inputField = null;\r\n    let errorMessage = null;\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        errorMessage = (<em>{props.errorMessage}</em>);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur} />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        case 'datePicker':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\r\n                            onChange={props.changed} className='datePickerControl'\r\n                            showYearDropdown dropdownMode=\"select\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        default: inputField = null;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {inputField}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Input;","import moment from 'moment';\r\n\r\nexport const returnInputConfiguration = () => {\r\n    return {\r\n        name: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Name:'\r\n        },\r\n        address: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true, maxLength: 60 }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Address:'\r\n        },\r\n        dateOfBirth: {\r\n            element: 'datePicker', type: 'text', value: moment(),\r\n            valid: true, touched: false,\r\n            errorMessage: '', label: 'Date of birth:'\r\n        }\r\n    }\r\n}","\r\nexport const convertStateToArrayOfFormOnjects = (formObject) => {\r\n\r\n    const formElementsArray = [];\r\n\r\n    for (let key in formObject) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: formObject[key]\r\n        });\r\n    }\r\n    return formElementsArray;\r\n}\r\n\r\nconst checkValidity = (value, validation) => {\r\n    let validationObject = {\r\n        isValid: true,\r\n        errorMessage: ''\r\n    };\r\n\r\n    if (validation) {\r\n        if (validation.required) {\r\n            validationObject.isValid = value.trim() !== '';\r\n            validationObject.errorMessage = validationObject.isValid ? '' : 'Field is required';\r\n        }\r\n\r\n        if (validationObject.isValid && validation.maxLength) {\r\n            validationObject.isValid = value.length <= validation.maxLength;\r\n            validationObject.errorMessage = validationObject.isValid ? '' : `Not allowed more than ${validation.maxLength} characters`;\r\n        }\r\n\r\n        return validationObject;\r\n    }\r\n    else {\r\n        return validationObject;\r\n    }\r\n}\r\n\r\nexport const executeValidationAndReturnFormElement = (event, updatedOwnerForm, id) => {\r\n    let formElement = { ...updatedOwnerForm[id] };\r\n    formElement.value = id === 'dateOfBirth' ? event : event.target.value;\r\n    formElement.touched = true;\r\n\r\n    const validationResponse = checkValidity(formElement.value, formElement.validation);\r\n\r\n    formElement.valid = validationResponse.isValid;\r\n    formElement.errorMessage = validationResponse.errorMessage;\r\n\r\n    return formElement;\r\n}\r\n\r\nexport const countInvalidElements = (ownerForm) => {\r\n    let countInvalidElements = 0;\r\n    for (let element in ownerForm) {\r\n        if (!ownerForm[element].valid) {\r\n            countInvalidElements = countInvalidElements + 1;\r\n            break;\r\n        }\r\n    }\r\n    return countInvalidElements;\r\n}\r\n\r\n\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Input from '../../../UI/Inputs/Input';\r\nimport { Well, Form, Button, FormGroup, Col } from 'react-bootstrap';\r\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport * as repositoryActions from '../../../store/Actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/Actions/errorHandlerActions';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/SuccessModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\n\r\nconst CreateOwner = (props) => {\r\n\r\n    const [ownerForm, setOwnerForm] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n\r\n    useEffect(() => {\r\n        setOwnerForm(returnInputConfiguration())\r\n    }, [])\r\n\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormOnjects({ ...ownerForm });\r\n\r\n    const createOwner = (e) => {\r\n        e.preventDefault();\r\n\r\n        const ownerToCreate = {\r\n            name: ownerForm.name.value,\r\n            address: ownerForm.address.value,\r\n            dateOfBirth: ownerForm.dateOfBirth.value\r\n        }\r\n        const url = '/api/owner';\r\n        dispatch(repositoryActions.postData(url, ownerToCreate, {...props}));\r\n    }\r\n\r\n    const handleChangeEvent = (event, id) => {\r\n        const updatedOwnerForm = { ...ownerForm };\r\n        updatedOwnerForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedOwnerForm, id);\r\n\r\n        const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\r\n\r\n        setOwnerForm(updatedOwnerForm);\r\n        setIsFormValid(counter === 0);\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-List');\r\n    }\r\n\r\n    return (\r\n        <Well>\r\n            <Form horizontal onSubmit={createOwner}>\r\n                {\r\n                    formElementsArray.map(element => {\r\n                        return <Input key={element.id} elementType={element.config.element}\r\n                            id={element.id} label={element.config.label}\r\n                            type={element.config.type} value={element.config.value}\r\n                            changed={(event) => handleChangeEvent(event, element.id)}\r\n                            errorMessage={element.config.errorMessage}\r\n                            invalid={!element.config.valid} shouldValidate={element.config.validation}\r\n                            touched={element.config.touched}\r\n                            blur={(event) => handleChangeEvent(event, element.id)} />\r\n                    })\r\n                }\r\n                <br />\r\n                <FormGroup>\r\n                    <Col mdOffset={6} md={1}>\r\n                        <Button type='submit' bsStyle='info' disabled={!isFormValid}>Create</Button>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n            <SuccessModal show={showSuccessModal}\r\n                modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfully'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal({ ...props }, '/owner-List'))} />\r\n\r\n            <ErrorModal show={showErrorModal}\r\n                modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'} closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Well>\r\n    );\r\n}\r\n\r\nexport default CreateOwner;"],"sourceRoot":""}